- asyncply:
    <<: *thirdparty_defaults
    version: 0.0.0.0
    version_manager: git
    cmake_target: null
    post_install:
        - ./*.h include/
        - ./metacommon/*.h include/metacommon/
    mode: dr
    source: https://github.com/makiolo/asyncply.git
    unittest:
        |
            #include <iostream>
            #include <complex>
            #include <sequence.h>

            int main(int, const char**)
            {
                try
                {
                    double total = 1.0;
                    total = asyncply::sequence(total,
                        [](double data)
                        {
                            return data + 2.0;
                        },
                        [](double data)
                        {
                            return data + 3.0;
                        },
                        [](double data)
                        {
                            return data + 4.0;
                        },
                        [](double data)
                        {
                            return data + 5.0;
                        },
                        [](double data)
                        {
                            return data + 6.0;
                        });
                    if (std::abs(total - 21.0) > 1e-3)
                    {
                        std::cout << "not expected result" << std::endl;
                        throw std::exception();
                    }
                    std::cout << "total: " << total << std::endl;
                }
                catch (std::exception& e)
                {
                    std::cout << "general exception " << e.what() << std::endl;
                    return 1;
                }
                return 0;
            }

